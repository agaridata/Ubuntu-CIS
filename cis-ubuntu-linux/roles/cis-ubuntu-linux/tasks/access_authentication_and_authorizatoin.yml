---

- name: "5.3.2 Ensure lockout for failed password attempts is configured (Scored)"
  lineinfile:
    name: /etc/pam.d/common-auth
    regexp: 'pam_tally2'
    insertbefore: BOF
    line: 'auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900'
  tags:
    - section_5
    - scored

- name: "5.3.3 Ensure password reuse is limited (Scored)"
  lineinfile:
    name: /etc/pam.d/common-password
    regexp: '^password\s+sufficient\s+pam_unix.so'
    insertbefore: BOF
    line: 'password sufficient pam_unix.so remember=5'
  tags:
    - section_5
    - scored

- name: "5.4.1.4 Ensure inactive password lock is 30 days or less (Scored)"
  lineinfile:
    path: /etc/default/useradd
    regexp: '^INACTIVE'
    line: 'INACTIVE=30'
    state: present
  tags:
    - section_5
    - scored

- name: "5.4.1.4 Ensure inactive password lock is 30 days or less (Scored)"
  shell: for i in $(egrep ^[^:]+:[^\!*] /etc/shadow | cut "-d:" -f1) ; do chage -I 30 "$i" ; done
  tags:
    - section_5
    - scored

- name: "5.4.2 Ensure system accounts are non-login (Scored)"
  shell: egrep -v "^\+" /etc/passwd | awk -F':' '($1!="root" && $1!="sync" && $1!="shutdown" && $1!="halt" && $3<1000 && $7!="/usr/sbin/nologin") {print}'
  register: system_acounts
  changed_when: False
  tags:
    - section_5
    - scored

- name: "5.4.2 Ensure system accounts are non-login (Scored)"
  shell: |
    for user in `awk -F: '($3 < 1000) {print $1 }' /etc/passwd`; do
      if [ $user != "root" ]; then
        usermod -L $user
        if [ $user != "sync" ] && [ $user != "shutdown" ] && [ $user != "halt" ]; then
          usermod -s /usr/sbin/nologin $user
        fi
      fi
    done
  args:
    executable: /bin/bash
  when: system_acounts.stdout != ""
  tags:
    - section_5
    - scored

- name: "5.5 Ensure root login is restricted to system console (Not Scored)"
  stat:
    path: /etc/securetty
  register: securetty_file
  tags:
    - section_5
    - not_scored

- name: "5.5 Ensure root login is restricted to system console (Not Scored)"
  replace:
    path: /etc/securetty
    regexp: '(.*)'
    replace: '#\1'
  when: securetty_file.stat.exists == True
  tags:
    - section_5
    - not_scored

- name: "5.5 Ensure root login is restricted to system console (Not Scored)"
  replace:
    path: /etc/securetty
    regexp: '(#console|#tty[0-99]|#vc[0-99])'
    replace: '\1'
  when: securetty_file.stat.exists == True
  tags:
    - section_5
    - not_scored
